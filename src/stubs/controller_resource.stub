<?php

namespace App\Http\Controllers{{Namespace}}\{{name}};

use App\Http\Controllers\Controller;
use App\Services{{Namespace}}\{{name}}\{{name}}ServiceInterface;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Symfony\Component\HttpFoundation\Response;

class {{name}}Controller extends Controller
{
    protected {{name}}ServiceInterface ${{nameCamel}}Service;

    public function __construct({{name}}ServiceInterface ${{nameCamel}}Service)
    {
        $this->{{nameCamel}}Service = ${{nameCamel}}Service;
    }

    /**
     * Exibe uma lista de recursos.
     */
    public function index(): JsonResponse
    {
        $items = $this->{{nameCamel}}Service->index();

        return response()->json(['data' => $items], Response::HTTP_OK);
    }

    /**
     * Armazena um novo recurso.
     */
    public function store(Request $request): JsonResponse
    {
        $item = $this->{{nameCamel}}Service->store($request->all());

        return response()->json(['data' => $item], Response::HTTP_CREATED);
    }

    /**
     * Exibe um recurso especÃ­fico.
     */
    public function show(int $id): JsonResponse
    {
        $item = $this->{{nameCamel}}Service->show($id);

        return response()->json(['data' => $item], Response::HTTP_OK);
    }

    /**
     * Atualiza um recurso existente.
     */
    public function update(Request $request, int $id): JsonResponse
    {
        $item = $this->{{nameCamel}}Service->update($id, $request->all());

        return response()->json(['data' => $item], Response::HTTP_OK);
    }

    /**
     * Remove um recurso.
     */
    public function destroy(int $id): JsonResponse
    {
        $this->{{nameCamel}}Service->destroy($id);

        return response()->json(null, Response::HTTP_NO_CONTENT);
    }
}
